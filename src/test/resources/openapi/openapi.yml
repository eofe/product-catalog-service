openapi: 3.0.4
info:
  title: Product catalog service - OpenAPI 3.0
  description: API for managing product categories in the catalog.
  termsOfService: https://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.12

externalDocs:
  description: Find out more about Swagger
  url: https://swagger.io

servers:
  - url: https://petstore3.swagger.io/api/v3

paths:
  /categories:
    post:
      tags:
        - Category
      summary: Add a new category to the product catalog.
      description: Creates a new category.
      operationId: addCategory
      requestBody:
        description: Category payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          description: Category created successfully
          headers:
            Location:
              description: URI of the created category
              schema:
                type: string
                format: uri
        '204':
          description: Category deleted successfully with no content in response
          headers:
            Location:
              description: URI of the deleted category
              schema:
                type: string
                format: uri
        '400':
          description: Malformed or invalid JSON input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
              example:
                timestamp: "2025-06-01T15:00:00Z"
                status: 400
                error: Bad Request
                message: Request body is invalid or malformed.
                path: /categories
        '405':
          description: HTTP method not supported for this endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
              example:
                timestamp: "2025-06-01T15:00:00Z"
                status: 405
                error: Method Not Allowed
                message: HTTP method not supported for this endpoint.
                path: /categories
        '422':
          description: Validation failed for one or more fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
              example:
                timestamp: "2025-06-01T15:00:00Z"
                status: 422
                error: Unprocessable Entity
                message: Validation failed for one or more fields.
                path: /categories
                errors:
                  - field: name
                    message: Name must not be blank
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
              example:
                timestamp: "2025-06-01T15:00:00Z"
                status: 500
                error: Internal Server Error
                message: An unexpected error occurred.
                path: /categories

components:
  schemas:
    Category:
      type: object
      properties:
        name:
          type: string
          example: Electronics
        description:
          type: string
          example: Devices, gadgets, and accessories
      required:
        - name
        - description
      xml:
        name: category

    StandardErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: '2025-06-01T15:00:00Z'
        status:
          type: integer
          example: 400
        error:
          type: string
          example: Bad Request
        message:
          type: string
          example: Request body is invalid or malformed.
        path:
          type: string
          example: /categories

    ValidationErrorResponse:
      allOf:
        - $ref: '#/components/schemas/StandardErrorResponse'
        - type: object
          properties:
            errors:
              type: array
              items:
                $ref: '#/components/schemas/FieldValidationError'

    FieldValidationError:
      type: object
      properties:
        field:
          type: string
          example: name
        message:
          type: string
          example: Name must not be blank
